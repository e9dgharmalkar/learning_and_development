"""Problem 2
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
Part A
Find the sum of the even-valued terms in the Fibonacci sequence
 whose values do not exceed four million.
Edit the file answer.py and update the function answer() to return the answer."""


def answer():
    """Return the sum of even Fibonacci numbers below 4 million."""
    a, b = 1, 2
    total = 0
    while b < 4000000:
        if b % 2 == 0:
            total += b
        a, b = b, a + b
    return total


if __name__ == "__main__":
    print(answer())
    # This function calculates the sum of all even Fibonacci numbers below 4 million
    # output: 4613732
    # It uses a while loop to generate Fibonacci numbers and checks if they are even
